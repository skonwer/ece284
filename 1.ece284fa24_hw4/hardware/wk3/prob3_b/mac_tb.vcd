$date
	Tue Oct 29 18:18:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mac_tb $end
$var wire 16 ! out [15:0] $end
$var reg 16 " a [15:0] $end
$var reg 4 # a0 [3:0] $end
$var reg 4 $ a1 [3:0] $end
$var reg 4 % a2 [3:0] $end
$var reg 4 & a3 [3:0] $end
$var reg 16 ' b [15:0] $end
$var reg 4 ( b0 [3:0] $end
$var reg 4 ) b1 [3:0] $end
$var reg 4 * b2 [3:0] $end
$var reg 4 + b3 [3:0] $end
$var reg 16 , c [15:0] $end
$var reg 1 - clk $end
$var reg 16 . expected_out [15:0] $end
$var integer 32 / i [31:0] $end
$var integer 32 0 w_dec0 [31:0] $end
$var integer 32 1 w_dec1 [31:0] $end
$var integer 32 2 w_dec2 [31:0] $end
$var integer 32 3 w_dec3 [31:0] $end
$var integer 32 4 w_file [31:0] $end
$var integer 32 5 w_scan_file [31:0] $end
$var integer 32 6 x_dec0 [31:0] $end
$var integer 32 7 x_dec1 [31:0] $end
$var integer 32 8 x_dec2 [31:0] $end
$var integer 32 9 x_dec3 [31:0] $end
$var integer 32 : x_file [31:0] $end
$var integer 32 ; x_scan_file [31:0] $end
$scope function mac_predicted $end
$var reg 16 < a [15:0] $end
$var reg 16 = b [15:0] $end
$var reg 16 > c [15:0] $end
$var reg 16 ? mac_predicted [15:0] $end
$upscope $end
$scope function w_bin $end
$var reg 4 @ w_bin [3:0] $end
$var integer 32 A weight [31:0] $end
$upscope $end
$scope function x_bin $end
$var reg 4 B x_bin [3:0] $end
$var integer 32 C act [31:0] $end
$upscope $end
$scope module mac_wrapper_instance $end
$var wire 16 D a [15:0] $end
$var wire 16 E b [15:0] $end
$var wire 16 F c [15:0] $end
$var wire 1 - clk $end
$var wire 16 G out [15:0] $end
$var reg 16 H a_q [15:0] $end
$var reg 16 I b_q [15:0] $end
$var reg 16 J c_q [15:0] $end
$scope module mac_instance $end
$var wire 16 K a [15:0] $end
$var wire 16 L b [15:0] $end
$var wire 16 M c [15:0] $end
$var wire 9 N s1 [8:0] $end
$var wire 9 O s0 [8:0] $end
$var wire 8 P p3 [7:0] $end
$var wire 8 Q p2 [7:0] $end
$var wire 8 R p1 [7:0] $end
$var wire 8 S p0 [7:0] $end
$var wire 16 T out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
b10000000000000000000000000000100 :
bx 9
bx 8
bx 7
bx 6
bx 5
b10000000000000000000000000000011 4
bx 3
bx 2
bx 1
bx 0
bx /
b0 .
0-
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#2
1-
#3
b0 /
0-
#4
1-
#5
b1100011110010001 '
b1100011110010001 E
b11000101110110 "
b11000101110110 D
b1 /
b1111111111010000 .
b1111111111010000 ?
b11000101110110 <
b1100011110010001 =
b0 >
b0 ,
b0 F
b1100 +
b111 *
b1001 )
b1 (
b1100 @
b0 A
b11 &
b1 %
b111 $
b110 #
b11 B
b1 C
b100 ;
b11 9
b1 8
b111 7
b110 6
b100 5
b11111111111111111111111111111100 3
b111 2
b11111111111111111111111111111001 1
b1 0
0-
#6
b1111111111010000 !
b1111111111010000 G
b1111111111010000 T
b111010101 O
b110 S
b11001111 R
b111111011 N
b111 Q
b11110100 P
b0 J
b0 M
b11000101110110 H
b11000101110110 K
b1100011110010001 I
b1100011110010001 L
1-
#7
b101110011101101 '
b101110011101101 E
b100111100100010 "
b100111100100010 D
b10 /
b1111111110011110 .
b1111111110011110 ?
b100111100100010 <
b101110011101101 =
b1111111111010000 >
b1111111111010000 ,
b1111111111010000 F
b101 +
b1100 *
b1110 )
b1101 (
b101 @
b1 A
b100 &
b1111 %
b10 $
b10 #
b100 B
b0 C
b100 9
b1111 8
b10 7
b10 6
b101 3
b11111111111111111111111111111100 2
b11111111111111111111111111111110 1
b11111111111111111111111111111101 0
0-
#8
b11111010 S
b111110110 O
b11111100 R
b11000100 Q
b111011000 N
b10100 P
b1111111110011110 !
b1111111110011110 G
b1111111110011110 T
b1111111111010000 J
b1111111111010000 M
b100111100100010 H
b100111100100010 K
b101110011101101 I
b101110011101101 L
1-
#9
b1110001001001010 '
b1110001001001010 E
b10000001000110 "
b10000001000110 D
b11 /
b1111111110000110 .
b1111111110000110 ?
b10000001000110 <
b1110001001001010 =
b1111111110011110 >
b1111111110011110 ,
b1111111110011110 F
b1110 +
b10 *
b100 )
b1010 (
b1110 @
b0 A
b10 &
b0 %
b100 $
b110 #
b10 B
b0 C
b10 9
b0 8
b100 7
b110 6
b11111111111111111111111111111110 3
b10 2
b100 1
b11111111111111111111111111111010 0
0-
#10
b11011100 S
b111101100 O
b10000 R
b0 Q
b111111100 N
b11111100 P
b1111111110000110 !
b1111111110000110 G
b1111111110000110 T
b1111111110011110 J
b1111111110011110 M
b10000001000110 H
b10000001000110 K
b1110001001001010 I
b1110001001001010 L
1-
#11
b1111001111000000 '
b1111001111000000 E
b1011001010100001 "
b1011001010100001 D
b100 /
b1111111101011001 .
b1111111101011001 ?
b1011001010100001 <
b1111001111000000 =
b1111111110000110 >
b1111111110000110 ,
b1111111110000110 F
b1111 +
b11 *
b1100 )
b1 A
b0 (
b1111 @
b1011 &
b10 %
b1010 $
b1 #
b1011 B
b1 C
b1011 9
b10 8
b1010 7
b1 6
b11111111111111111111111111111111 3
b11 2
b11111111111111111111111111111100 1
b0 0
0-
#12
b110 Q
b0 S
b111011000 O
b11011000 R
b111111011 N
b11110101 P
b1111111101011001 !
b1111111101011001 G
b1111111101011001 T
b1111111110000110 J
b1111111110000110 M
b1011001010100001 H
b1011001010100001 K
b1111001111000000 I
b1111001111000000 L
1-
#13
b100101001011100 '
b100101001011100 E
b1010010001100010 "
b1010010001100010 D
b101 /
b1111111101111111 .
b1111111101111111 ?
b1010010001100010 <
b100101001011100 =
b1111111101011001 >
b1111111101011001 ,
b1111111101011001 F
b100 +
b1010 *
b101 )
b1100 (
b100 @
b0 A
b1010 &
b100 %
b110 $
b10 #
b1010 B
b0 C
b1010 9
b100 8
b110 7
b10 6
b100 3
b11111111111111111111111111111010 2
b101 1
b11111111111111111111111111111100 0
0-
#14
b11111000 S
b10110 O
b11110 R
b11101000 Q
b10000 N
b101000 P
b1111111101111111 !
b1111111101111111 G
b1111111101111111 T
b1111111101011001 J
b1111111101011001 M
b1010010001100010 H
b1010010001100010 K
b100101001011100 I
b100101001011100 L
1-
#15
0-
#25
